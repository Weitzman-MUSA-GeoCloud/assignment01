# Docker container method borrowed from https://aschmelyun.com/blog/using-docker-run-inside-of-github-actions/

name: Test Query 01
on:
  push:
    branches: [ main ]
    paths:
      - 'query01.sql'
      - '__tests__/test_query01.js'
      - '__tests__/expected_results/query01*'
      - '.github/workflows/test-query01.yml'

jobs:
  build:

    runs-on: ubuntu-latest

    # Use the postgis image to start a postgres service
    #
    # See the following links for more information:
    # https://hub.docker.com/_/postgis
    # https://docs.github.com/en/actions/guides/about-service-containers
    # https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
    services:
      postgres:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Lowercase the Repository Name
      id: reponame
      run: INPUT=${{ github.repository }} echo "lowercase=${INPUT,,}" >> "$GITHUB_OUTPUT"

    - name: Run the test(s)
      uses: addnab/docker-run-action@v3
      with:
        registry: gcr.io
        image: ${{ steps.reponame.outputs.lowercase }}:latest
        options: >-
          -v ${{ github.workspace }}:/workspace/assignment01
          -e POSTGRES_USER=postgres POSTGRES_PASS=postgres POSTGRES_HOST=db POSTGRES_PORT=5432 POSTGRES_NAME=postgres
        run: >-
          /workspace/assignment01/__entrypoints__/run_tests.sh
          __tests__/test_query01.js
