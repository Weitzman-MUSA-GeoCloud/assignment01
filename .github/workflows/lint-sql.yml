# Docker container method borrowed from https://aschmelyun.com/blog/using-docker-run-inside-of-github-actions/

name: Lint SQL files

on:
  pull_request:
    branches: [ main ]
    paths: [ '**sql**' ]
  push:
    branches: [ main ]
    paths: [ '**sql**' ]

jobs:
  build:

    runs-on: ubuntu-latest

    # Use the postgis image to start a postgres service
    #
    # See the following links for more information:
    # https://hub.docker.com/_/postgis
    # https://docs.github.com/en/actions/guides/about-service-containers
    # https://docs.github.com/en/actions/guides/creating-postgresql-service-containers
    services:
      db:
        image: postgis/postgis
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Check out the code
      uses: actions/checkout@v3

    - name: Lowercase the Repository Name
      id: reponame
      run: INPUT=${{ github.repository }} bash -c 'echo "lowercase=${INPUT@L}"' >> "$GITHUB_OUTPUT"

    - name: Restore the existing Docker image from cache
      id: image-restore
      uses: actions/cache/restore@v4
      with:
        path: assignment01-image.tar
        key: ${{ runner.os }}-assignment01-image-${{ steps.reponame.outputs.lowercase }}

    - name: Load the Docker image from cache
      run: |
        docker load -i assignment01-image.tar || \
        echo "No cache found, building from scratch"

    - name: Pull the lint and test Docker image (in case update is needed)
      run: |
        docker pull ghcr.io/${{ steps.reponame.outputs.lowercase }}:main && \
        docker save ghcr.io/${{ steps.reponame.outputs.lowercase }}:main > assignment01-image.tar

    - name: Save the latest Docker image to cache
      id: image-save
      uses: actions/cache/save@v4
      with:
        path: assignment01-image.tar
        key: ${{ runner.os }}-assignment01-image-${{ steps.reponame.outputs.lowercase }}

    - name: Lint the SQL files
      run: |
        docker run \
          -v ${{ github.workspace }}:/workspace/assignment01 \
          \
          ghcr.io/${{ steps.reponame.outputs.lowercase }}:main \
          \
          /workspace/assignment01/__entrypoints__/run_linter.sh .
